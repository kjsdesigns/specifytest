#!/usr/bin/env bash
#
# Pre-commit hook for Specify framework
# Validates templates before allowing commits to framework changes
#

# Find repository root
REPO_ROOT=$(git rev-parse --show-toplevel)

# Colors
RED='\033[0;31m'
YELLOW='\033[1;33m'
GREEN='\033[0;32m'
NC='\033[0m'

# Check if any template files are being committed
TEMPLATE_FILES=$(git diff --cached --name-only --diff-filter=ACM | grep -E '^(templates/|\.specify/templates/)' || true)

if [ -n "$TEMPLATE_FILES" ]; then
    echo -e "${YELLOW}Template files modified, running template validation...${NC}"

    # Run template validator
    if python3 "$REPO_ROOT/.specify/scripts/validate-templates.py"; then
        echo -e "${GREEN}✓ Template validation passed${NC}"
    else
        echo -e "${RED}✗ Template validation failed${NC}"
        echo -e "${YELLOW}Please fix template issues before committing${NC}"
        exit 1
    fi

    # Check if type registry needs to be regenerated
    if git diff --cached --name-only --diff-filter=ACM | grep -qE '^(templates/|\.specify/templates/)spec-.*\.(yaml|md)$'; then
        echo -e "${YELLOW}Spec templates modified, checking type registry...${NC}"

        # First check if registry needs updating (without modifying it)
        if python3 "$REPO_ROOT/.specify/scripts/generate-type-registry.py" --check > /dev/null 2>&1; then
            echo -e "${GREEN}✓ Type registry is up to date${NC}"
        else
            # Registry needs updating - regenerate it
            echo -e "${YELLOW}Type registry needs update, regenerating...${NC}"
            python3 "$REPO_ROOT/.specify/scripts/generate-type-registry.py"

            # Check if registry is already staged
            if git diff --cached --name-only | grep -q "type-registry.yaml"; then
                echo -e "${YELLOW}Type registry was already staged but needs update${NC}"
                echo -e "${YELLOW}Please review the changes and re-stage:${NC}"
                echo -e "  ${GREEN}git add .specify/schemas/type-registry.yaml${NC}"
                exit 1
            fi

            # Check if registry was updated (unstaged changes)
            if git diff --name-only | grep -q "type-registry.yaml"; then
                echo -e "${YELLOW}Type registry was updated. Please review and stage the changes:${NC}"
                echo -e "  ${GREEN}git add .specify/schemas/type-registry.yaml${NC}"
                exit 1
            fi
        fi
    fi
fi

# Check if any spec files are being committed
SPEC_FILES=$(git diff --cached --name-only --diff-filter=ACM | grep -E '^specs/' | grep -E '\.(yaml|md)$' || true)

if [ -n "$SPEC_FILES" ]; then
    echo -e "${YELLOW}Spec files modified, running validation...${NC}"

    # Run spec validator
    if python3 "$REPO_ROOT/.specify/scripts/validate-specs.py" "$REPO_ROOT/specs/" --verbose; then
        echo -e "${GREEN}✓ Spec validation passed${NC}"
    else
        echo -e "${RED}✗ Spec validation failed${NC}"
        echo -e "${YELLOW}Please fix validation issues before committing${NC}"
        echo -e "\nAvailable fix commands:"
        echo -e "  ${GREEN}python3 .specify/scripts/fix-references.py specs/ --apply${NC}  # Fix reference issues"
        echo -e "  ${GREEN}python3 .specify/scripts/migrate-spec-names.py specs/ --apply${NC}  # Fix naming issues"
        exit 1
    fi
fi

exit 0