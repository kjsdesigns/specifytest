# Inline Contracts Component
# Common YAML patterns for contracts, schemas, and data structures
# Reference in templates with: <!-- See components/spec-inline-contracts.yaml -->

# === Entity/Data Model Pattern ===
entity:
  name: [ENTITY_NAME]
  table: [TABLE_NAME]
  description: [ENTITY_PURPOSE]

  fields:
    - name: id
      type: [string|integer|uuid]
      format: [cuid|uuid|autoincrement]
      constraints:
        primary: true
        required: true
        unique: true
      description: Primary identifier

    - name: [FIELD_NAME]
      type: [string|number|boolean|datetime|json|array]
      format: [email|uri|date|datetime|uuid]
      constraints:
        required: [true|false]
        unique: [true|false]
        minLength: [NUMBER]
        maxLength: [NUMBER]
        min: [NUMBER]
        max: [NUMBER]
        pattern: [REGEX_PATTERN]
        enum: [VALUE_1, VALUE_2, VALUE_3]
        default: [DEFAULT_VALUE]
      description: [FIELD_PURPOSE]
      example: "[EXAMPLE_VALUE]"

    - name: created_at
      type: datetime
      constraints:
        required: true
        default: now()
      description: Timestamp of creation

    - name: updated_at
      type: datetime
      constraints:
        required: true
        default: now()
      on_update: now()
      description: Timestamp of last update

  relationships:
    - name: [RELATIONSHIP_NAME]
      type: [hasOne|hasMany|belongsTo|manyToMany]
      target: [TARGET_ENTITY]
      foreign_key: [FOREIGN_KEY_FIELD]
      through: [JUNCTION_TABLE]  # Only for manyToMany
      on_delete: [cascade|set_null|restrict|no_action]
      on_update: [cascade|set_null|restrict|no_action]
      description: [RELATIONSHIP_PURPOSE]

  invariants:
    - rule: [BUSINESS_RULE_DESCRIPTION]
      constraint: [SQL_OR_LOGIC_EXPRESSION]
    - rule: [ANOTHER_INVARIANT]
      constraint: [CONSTRAINT_EXPRESSION]

  indexes:
    - name: [INDEX_NAME]
      fields: [FIELD_1, FIELD_2]
      unique: [true|false]
      type: [btree|hash|gin|gist]
      where: [PARTIAL_INDEX_CONDITION]

# === JSON Schema Pattern ===
json_schema:
  $schema: "http://json-schema.org/draft-07/schema#"
  $id: "[SCHEMA_URI]"
  title: [SCHEMA_TITLE]
  description: [SCHEMA_PURPOSE]
  type: object

  required: [REQUIRED_FIELD_1, REQUIRED_FIELD_2]

  properties:
    field1:
      type: string
      description: [FIELD_DESCRIPTION]
      minLength: [NUMBER]
      maxLength: [NUMBER]
      pattern: "[REGEX_PATTERN]"
      example: "[EXAMPLE_VALUE]"

    field2:
      type: number
      description: [FIELD_DESCRIPTION]
      minimum: [NUMBER]
      maximum: [NUMBER]
      multipleOf: [NUMBER]
      example: [NUMBER]

    field3:
      type: boolean
      description: [FIELD_DESCRIPTION]
      default: [true|false]

    field4:
      type: array
      description: [FIELD_DESCRIPTION]
      items:
        type: [TYPE]
        properties: {}
      minItems: [NUMBER]
      maxItems: [NUMBER]
      uniqueItems: [true|false]

    field5:
      type: object
      description: [FIELD_DESCRIPTION]
      required: [SUB_FIELD_1]
      properties:
        sub_field_1:
          type: string

    field6:
      oneOf:
        - type: string
          enum: [OPTION_1, OPTION_2]
        - type: number
      description: [FIELD_DESCRIPTION]

  additionalProperties: [true|false]

# === Event Schema Pattern ===
event_schema:
  event_type: [EVENT_TYPE_NAME]
  version: [VERSION]  # e.g., "1.0.0"
  description: [EVENT_PURPOSE]

  metadata:
    event_id:
      type: string
      format: uuid
      required: true
      description: Unique event identifier

    timestamp:
      type: string
      format: datetime
      required: true
      description: When the event occurred

    source:
      type: string
      required: true
      description: Service that produced the event
      example: "[SERVICE_NAME]"

    trace_id:
      type: string
      required: false
      description: Distributed tracing identifier

    correlation_id:
      type: string
      required: false
      description: Correlation identifier for related events

  payload:
    type: object
    required: [FIELD_1, FIELD_2]
    properties:
      field1:
        type: [TYPE]
        description: [FIELD_PURPOSE]
      field2:
        type: [TYPE]
        description: [FIELD_PURPOSE]

  delivery:
    guarantee: [at_least_once|at_most_once|exactly_once]
    ordering: [none|per_key|global]
    retention: [NUMBER] hours
    ttl: [NUMBER] seconds

# === Message Schema Pattern ===
message_schema:
  message_type: [MESSAGE_TYPE]
  direction: [request|response|event]
  protocol: [HTTP|gRPC|AMQP|MQTT|WebSocket]

  headers:
    content_type:
      type: string
      required: true
      values: [application/json, application/xml]

    message_id:
      type: string
      format: uuid
      required: true

    timestamp:
      type: integer
      format: unix_timestamp
      required: true

    custom_header:
      type: string
      required: [true|false]

  body:
    type: object
    format: [json|xml|protobuf|avro]
    schema:
      $ref: [SCHEMA_REFERENCE]

# === Validation Rules Pattern ===
validation_rules:
  - field: [FIELD_NAME]
    rules:
      - type: required
        message: "[FIELD_NAME] is required"

      - type: format
        format: [email|url|uuid|date|datetime]
        message: "[FIELD_NAME] must be a valid [FORMAT]"

      - type: length
        min: [NUMBER]
        max: [NUMBER]
        message: "[FIELD_NAME] must be between [MIN] and [MAX] characters"

      - type: pattern
        regex: "[REGEX_PATTERN]"
        message: "[FIELD_NAME] must match pattern"

      - type: enum
        values: [VALUE_1, VALUE_2, VALUE_3]
        message: "[FIELD_NAME] must be one of: [VALUES]"

      - type: range
        min: [NUMBER]
        max: [NUMBER]
        message: "[FIELD_NAME] must be between [MIN] and [MAX]"

      - type: custom
        validator: [VALIDATOR_FUNCTION_NAME]
        message: "[CUSTOM_VALIDATION_MESSAGE]"

# === API Contract Snippet ===
api_contract:
  endpoint: /api/[RESOURCE]
  method: [GET|POST|PUT|DELETE|PATCH]

  path_params:
    - name: [PARAM_NAME]
      type: [TYPE]
      required: true
      description: [PARAM_PURPOSE]

  query_params:
    - name: [PARAM_NAME]
      type: [TYPE]
      required: [true|false]
      default: [DEFAULT_VALUE]
      description: [PARAM_PURPOSE]

  request_body:
    content_type: application/json
    schema:
      $ref: "[SCHEMA_REFERENCE]"

  responses:
    200:
      description: Success
      schema:
        $ref: "[SCHEMA_REFERENCE]"
    400:
      description: Bad Request
      schema:
        $ref: "#/components/schemas/Error"
    404:
      description: Not Found

# === State Machine Pattern ===
state_machine:
  initial_state: [INITIAL_STATE]

  states:
    - name: [STATE_NAME]
      type: [normal|terminal|error]
      description: [STATE_DESCRIPTION]
      allowed_transitions: [STATE_2, STATE_3]
      on_enter:
        - action: [ACTION_NAME]
          description: [ACTION_PURPOSE]
      on_exit:
        - action: [ACTION_NAME]
          description: [ACTION_PURPOSE]

  transitions:
    - from: [FROM_STATE]
      to: [TO_STATE]
      trigger: [TRIGGER_EVENT]
      condition: [TRANSITION_CONDITION]
      actions:
        - [ACTION_1]
        - [ACTION_2]

# === Configuration Pattern ===
configuration:
  env_vars:
    - name: [ENV_VAR_NAME]
      type: [string|number|boolean|json]
      required: [true|false]
      default: [DEFAULT_VALUE]
      description: [VAR_PURPOSE]
      example: "[EXAMPLE_VALUE]"
      validation:
        pattern: [REGEX_PATTERN]
        min: [NUMBER]
        max: [NUMBER]

  feature_flags:
    - name: [FLAG_NAME]
      type: boolean
      default: [true|false]
      description: [FLAG_PURPOSE]
      rollout_strategy: [all|percentage|user_list|gradual]
      percentage: [NUMBER]  # If rollout_strategy is percentage

  secrets:
    - name: [SECRET_NAME]
      description: [SECRET_PURPOSE]
      rotation_period: [NUMBER] days
      storage: [vault|ssm|secrets_manager|env]

# Notes:
# - Use [PLACEHOLDER] for values user needs to fill
# - Use {variable} for template variables from frontmatter
# - Adjust field types and constraints based on your needs
# - Remove optional sections if not applicable